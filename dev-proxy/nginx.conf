user nginx;
worker_processes auto;

error_log /dev/stderr notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format main
        'access: [$time_local] ip=$remote_addr r="$request" '
        's=$status b=$body_bytes_sent ref="$http_referer" ua="$http_user_agent" '
        'rt=$request_time rl=$request_length '
        'url=$upstream_response_length urt=$upstream_response_time us=$upstream_status '
        'rid=$request_id';
    access_log /dev/stdout main;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close; # Allows normal HTTP traffic
    }

    server {
        listen 80;
        listen [::]:80;
        server_name _;
        client_max_body_size 1M;

        location / {
            proxy_pass http://website/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /api {
            # Allows calls to /api without trailing slash
            rewrite ^ /api/ last;
        }

        location /api/ {
            # Any calls to /api/*
            # The slash in the proxy_pass is required because otherwise, the '/api' prefix would not
            # be stripped. This in turn requires the location to have a slash as otherwise, double
            # slashes would occur (/api/hello -> //hello). To allow calls to /api we add the exact
            # match = /api location block.
            proxy_pass http://api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Proxy WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Upgrade $http_upgrade;
        }
    }
}
